
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

poke327.cpp,7966
#define malloc(21,350
typedef class path27,494
  heap_node_t *hn;hn30,523
  uint8_t pos[pos31,542
  uint8_t from[from32,560
  int32_t cost;33,579
} path_t;34,595
typedef enum dim36,606
  dim_x,38,625
  dim_y,39,634
  num_dims40,643
} dim;41,654
typedef int pair[pair43,662
#define MAP_X 45,691
#define MAP_Y 46,708
#define MIN_TREES 47,725
#define MIN_BOULDERS 48,746
#define TREE_PROB 49,770
#define BOULDER_PROB 50,791
#define WORLD_SIZE 51,815
#define MIN_TRAINERS 53,839
#define ADD_TRAINER_PROB 54,862
#define MOUNTAIN_SYMBOL 56,891
#define BOULDER_SYMBOL 57,919
#define TREE_SYMBOL 58,946
#define FOREST_SYMBOL 59,970
#define GATE_SYMBOL 60,996
#define PATH_SYMBOL 61,1020
#define POKEMART_SYMBOL 62,1044
#define POKEMON_CENTER_SYMBOL 63,1072
#define TALL_GRASS_SYMBOL 64,1106
#define SHORT_GRASS_SYMBOL 65,1136
#define WATER_SYMBOL 66,1167
#define ERROR_SYMBOL 67,1192
#define DIJKSTRA_PATH_MAX 69,1218
#define PC_SYMBOL 71,1259
#define HIKER_SYMBOL 72,1281
#define RIVAL_SYMBOL 73,1306
#define EXPLORER_SYMBOL 74,1331
#define SENTRY_SYMBOL 75,1359
#define PACER_SYMBOL 76,1385
#define SWIMMER_SYMBOL 77,1410
#define WANDERER_SYMBOL 78,1437
#define mappair(80,1466
#define mapxy(81,1523
#define heightpair(82,1558
#define heightxy(83,1621
typedef enum __attribute__((__packed__)) terrain_type86,1685
  ter_boulder,88,1741
  ter_tree,89,1756
  ter_path,90,1768
  ter_mart,91,1780
  ter_center,92,1792
  ter_grass,93,1806
  ter_clearing,94,1819
  ter_mountain,95,1835
  ter_forest,96,1851
  ter_water,97,1865
  ter_gate,98,1878
  num_terrain_types,99,1890
  ter_debug100,1911
} terrain_type;101,1923
typedef enum __attribute__((__packed__)) movement_type103,1940
  move_hiker,105,1997
  move_rival,106,2011
  move_pace,107,2025
  move_wander,108,2038
  move_sentry,109,2053
  move_explore,110,2068
  move_swim,111,2084
  move_pc,112,2097
  num_movement_types113,2108
} movement_type_t;114,2129
typedef enum __attribute__((__packed__)) characterype116,2149
  char_pc,118,2205
  char_hiker,119,2216
  char_rival,120,2230
  char_swimmer,121,2244
  char_other,122,2260
  num_characterypes123,2274
} characterype_t;124,2294
typedef class pc126,2313
} pc_t;129,2340
typedef class npc131,2349
  characterype_t ctype;134,2377
  movement_type_t mtype;135,2401
  pair dir;136,2426
} npc_t;137,2438
typedef class character139,2448
  npc_t *npc;npc142,2482
  pc_t *pc;pc143,2496
  pair pos;144,2508
  char symbol;145,2520
  int next_turn;146,2535
  int seq_num;147,2552
} character;148,2567
typedef class map150,2581
  terrain_type map[map153,2609
  uint8_t height[height154,2643
  character *cmap[cmap155,2675
  heap_t turn;156,2708
  int8_t n,157,2723
  int8_t n, s,157,2723
  int8_t n, s, e,157,2723
  int8_t n, s, e, w;157,2723
} map;158,2744
typedef class queue_node160,2752
  int x,163,2787
  int x, y;163,2787
  struct queue_node *next;next164,2799
} queue_node_t;165,2826
bool csv_isPokemon 167,2843
bool csv_isMoves 168,2871
bool csv_isPokemonMoves 169,2897
bool csv_isPokemonSpecies 170,2930
bool csv_isExperience 171,2965
bool csv_isTypeNames 172,2996
bool csv_isPokemonStats 173,3026
bool csv_isStats 174,3059
bool csv_isPokemonTypes 175,3085
void *data;data176,3118
typedef struct pokemon_s178,3131
  int id;180,3158
  std::string identifier;181,3168
  int species_id;182,3194
  int height;183,3212
  int weight;184,3226
  int base_xp;185,3240
  int order;186,3255
  int is_default;187,3268
} pokemon_t;188,3286
typedef struct moves_s190,3300
  int id;192,3325
  std::string identifier;193,3335
  int generation_id;194,3361
  int type_id;195,3382
  int power;196,3397
  int pp;197,3410
  int accuracy;198,3420
  int priority;199,3436
  int target_id;200,3452
  int damage_class_id;201,3469
  int effect_id;202,3492
  int effect_chance;203,3509
  int contest_type_id;204,3530
  int contest_effect_id;205,3553
  int super_contest_effect_id;206,3578
} moves_t;207,3609
typedef struct pokemon_moves_s209,3621
  int pokemon_id;211,3654
  int version_group_id;212,3672
  int move_id;213,3696
  int pokemon_move_method_id;214,3711
  int level;215,3741
  int order;216,3754
} pokemon_moves_t;217,3767
typedef struct pokemon_species_s219,3787
  int id;221,3822
  std::string identifier;222,3832
  int generation_id;223,3858
  int evolves_from_species_id;224,3879
  int evolution_chain_id;225,3910
  int color_id;226,3936
  int shape_id;227,3952
  int habitat_id;228,3968
  int gender_rate;229,3986
  int capture_rate;230,4005
  int base_happiness;231,4025
  int is_baby;232,4047
  int hatch_counter;233,4062
  int has_gender_differences;234,4083
  int growth_rate_id;235,4113
  int forms_switchable;236,4135
  int is_legendary;237,4159
  int is_mythical;238,4179
  int order;239,4198
  int conquest_order;240,4211
} pokemon_species_t;241,4233
typedef struct experience_s243,4255
  int growth_rate_id;245,4285
  int level;246,4307
  int experience;247,4320
} experience_t;248,4338
typedef struct type_names_s250,4355
  int type_id;252,4385
  int local_language_id;253,4400
  std::string name;254,4425
} type_names_t;255,4445
typedef struct pokemon_stats_s257,4462
  int pokemon_id;259,4495
  int stat_id;260,4513
  int base_stat;261,4528
  int effort;262,4545
} pokemon_stats_t;263,4559
typedef struct stats_s265,4579
  int id;267,4604
  int damage_class_id;268,4614
  std::string identifier;269,4637
  int is_battle_only;270,4663
  int game_index;271,4685
} stats_t;272,4703
typedef struct pokemon_types_s274,4715
  int pokemon_id;276,4748
  int type_id;277,4766
  int slot;278,4781
} pokemon_types_t;279,4793
typedef class world281,4813
  map *world[world284,4843
  pair cur_idx;285,4881
  map *cur_map;cur_map286,4897
  int hiker_dist[hiker_dist289,5018
  int rival_dist[rival_dist290,5050
  character pc;291,5082
  int char_seq_num;292,5098
} world_t;293,5118
world_t world;297,5285
static pair all_dirs[all_dirs299,5301
#define IM 311,5492
int32_t move_cost[move_cost316,5802
#undef IM324,6193
#define rand_dir(326,6204
#define is_adjacent(333,6369
uint32_t can_see(345,7002
static void move_hiker_func(444,9431
static void move_rival_func(475,10405
static void move_pacer_func(506,11378
static void move_wanderer_func(533,12207
static void move_sentry_func(558,13109
static void move_explorer_func(564,13230
static void move_swimmer_func(593,14352
static void move_pc_func(682,17155
void rand_pos(754,18860
void new_hiker(760,18975
void new_rival(786,19621
void new_swimmer(813,20326
void new_char_other(838,20944
int trainer_count;881,21941
void place_characters(882,21960
int32_t cmp_char_turns(913,22544
void delete_character(923,22888
void init_pc(936,23038
static int32_t path_cmp(959,23487
static int32_t edge_penalty(964,23608
static void dijkstra_path(969,23734
static int build_paths(1089,27802
static int gaussian[gaussian1198,29530
static int smooth_height(1205,29676
static void find_building_location(1386,34038
static int place_pokemart(1419,35397
static int place_center(1433,35669
static terrain_type border_type(1449,36102
static int maperrain(1510,37092
static int place_boulders(1731,41903
static int place_trees(1751,42275
static int new_map(1775,42832
static void print_map(1877,44993
void init_world(1946,46578
void delete_world(1953,46704
#define ter_cost(1970,46946
static int32_t hiker_cmp(1972,47000
static int32_t rival_cmp(1980,47295
void pathfind(1988,47590
void print_hiker_dist(2241,57855
void print_rival_dist(2262,58173
void print_character(2284,58531
bool handle_movement_input(2290,58682
void display_info_menu(2373,61298
int trainer_menu_buffer 2426,62395
bool set_fly_x 2427,62424
bool neg_x 2428,62467
int fly_x 2429,62502
int handle_menu_input(2430,62572
void game_loop(2622,68245
int handleFileInput(2677,69485
int main(2974,80420
